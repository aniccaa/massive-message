version: "3.2"

services:
  receiver:
    image: receiver.message:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    ports:
      - "162:162/udp"
    depends_on:
      - "rabbitmq"
    networks:
      - networks_front
      - networks_service
    # command: "./wait-for.sh rabbitmq:5672 -- ./receiver"
    command: "sleep 9999999"
  server:
    image: server.message:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    depends_on:
      - "rabbitmq"
    networks:
      - networks_front
      - networks_service
    # command: "./wait-for.sh rabbitmq:5672 -- ./server"
    command: "sleep 9999999"
  rabbitmq:
    image: rabbitmq:alpine
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - networks_service
  notification:
    image: notification.message
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    networks:
      - networks_service
      - networks_db
    #command: "./wait-for.sh db:5432 -- ./wait-for.sh rabbitmq:5672 -- ./pool"
    command: "sleep 9999999"
  postgres:
    image: postgres.message:latest
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=iforgot
      - POSTGRES_MULTIPLE_DATABASES=notification
    networks:
      - networks_db
    volumes:
      - type: volume
        source: dbdata
        target: /var/lib/postgresql/data      
networks:
  networks_front:
    driver: overlay
    attachable: true
  networks_service:
    driver: overlay
    attachable: true
  networks_db:
    driver: overlay
    attachable: true
volumes:
  dbdata:
  logdata:
